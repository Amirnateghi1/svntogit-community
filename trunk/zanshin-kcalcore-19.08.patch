diff --git a/src/akonadi/akonadiserializer.cpp b/src/akonadi/akonadiserializer.cpp
index ee4d1ff9..61eff278 100644
--- a/src/akonadi/akonadiserializer.cpp
+++ b/src/akonadi/akonadiserializer.cpp
@@ -239,15 +239,15 @@ void Serializer::updateTaskFromItem(Domain::Task::Ptr task, Item item)
     attachments.reserve(attachmentsInput.size());
     std::transform(attachmentsInput.cbegin(), attachmentsInput.cend(),
                    std::back_inserter(attachments),
-                   [&mimeDb] (const KCalCore::Attachment::Ptr &attach) {
+                   [&mimeDb] (const KCalCore::Attachment attach) {
                        Domain::Task::Attachment attachment;
-                       if (attach->isUri())
-                           attachment.setUri(QUrl(attach->uri()));
+                       if (attach.isUri())
+                           attachment.setUri(QUrl(attach.uri()));
                        else
-                           attachment.setData(attach->decodedData());
-                       attachment.setLabel(attach->label());
-                       attachment.setMimeType(attach->mimeType());
-                       attachment.setIconName(mimeDb.mimeTypeForName(attach->mimeType()).iconName());
+                           attachment.setData(attach.decodedData());
+                       attachment.setLabel(attach.label());
+                       attachment.setMimeType(attach.mimeType());
+                       attachment.setIconName(mimeDb.mimeTypeForName(attach.mimeType()).iconName());
                        return attachment;
                    });
     task->setAttachments(attachments);
@@ -255,11 +255,11 @@ void Serializer::updateTaskFromItem(Domain::Task::Ptr task, Item item)
     if (todo->attendeeCount() > 0) {
         const auto attendees = todo->attendees();
         const auto delegate = std::find_if(attendees.begin(), attendees.end(),
-                                           [] (const KCalCore::Attendee::Ptr &attendee) {
-                                               return attendee->status() == KCalCore::Attendee::Accepted;
+                                           [] (const KCalCore::Attendee attendee) {
+                                               return attendee.status() == KCalCore::Attendee::Accepted;
                                            });
         if (delegate != attendees.end()) {
-            task->setDelegate(Domain::Task::Delegate((*delegate)->name(), (*delegate)->email()));
+            task->setDelegate(Domain::Task::Delegate((*delegate).name(), (*delegate).email()));
         }
     }
 }
@@ -324,18 +324,18 @@ Akonadi::Item Serializer::createItemFromTask(Domain::Task::Ptr task)
     }
 
     for (const auto &attachment : task->attachments()) {
-        KCalCore::Attachment::Ptr attach(new KCalCore::Attachment(QByteArray()));
+        KCalCore::Attachment attach(QByteArray{});
         if (attachment.isUri())
-            attach->setUri(attachment.uri().toString());
+            attach.setUri(attachment.uri().toString());
         else
-            attach->setDecodedData(attachment.data());
-        attach->setMimeType(attachment.mimeType());
-        attach->setLabel(attachment.label());
+            attach.setDecodedData(attachment.data());
+        attach.setMimeType(attachment.mimeType());
+        attach.setLabel(attachment.label());
         todo->addAttachment(attach);
     }
 
     if (task->delegate().isValid()) {
-        KCalCore::Attendee::Ptr attendee(new KCalCore::Attendee(task->delegate().name(),
+        KCalCore::Attendee attendee(new KCalCore::Attendee(task->delegate().name(),
                                                                 task->delegate().email(),
                                                                 true,
                                                                 KCalCore::Attendee::Accepted));
